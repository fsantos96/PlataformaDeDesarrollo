@page "/usuario/listado"
@using BlazorApp1.Data;
@using Model.Entities
@inject UsuarioService UsuarioService
@inject NavigationManager navigation
@inject IJSRuntime JsRuntime

@if (listadoUsuarios == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h3>Usuarios</h3>
    <button class="btn btn-primary" @onclick="()=>EditarUsuario(0)">Nuevo</button>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>User</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var usuario in listadoUsuarios)
            {
                <tr>
                    <td>@usuario.Id</td>
                    <td>@usuario.User</td>
                    <td><button class="btn btn-primary" @onclick="()=>EditarUsuario(usuario.Id)">Editar</button></td>
                    <td><button class="btn btn-danger" @onclick="()=>BorrarUsuario(usuario.Id)">Borrar</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Usuario> listadoUsuarios;

    protected override async Task OnInitializedAsync()
    {
        listadoUsuarios = await UsuarioService.GetAll();
    }

    protected void EditarUsuario(int id)
    {
        navigation.NavigateTo("usuario/editar/" + id);
    }

    protected async Task BorrarUsuario(int id)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Desea elimiar el usuario?");
        if (confirmed)
        {
            await UsuarioService.Delete(id);
            listadoUsuarios = await UsuarioService.GetAll();
        }
    }
}
